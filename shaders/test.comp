#version 460 core

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout (rgba32f, binding = 0) uniform image2D imgOutput;
layout (location = 0) uniform float time;


void main() {
  vec4 value = vec4(0.0, 0.0, 0.0, 0.0);
  ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);

  float xmin = -2.0;
  float xmax = 1.0;
  float ymin = -1.0;
  float ymax = 1.0;
  int n_iters = 128;
  uint i;

  float x_new;
  float y_new;
  float x = 0;
  float y = 0;

  float x_real =(float(texelCoord.x) / float(gl_NumWorkGroups.x * gl_WorkGroupSize.x));
  float x_imag = (float(texelCoord.y) / float(gl_NumWorkGroups.y * gl_WorkGroupSize.y));

  for (i = 0; i < n_iters; i++) {
    x_new = x * x - y * y + x_real * (xmax - xmin) + xmin;
    y_new = 2.0 * x * y + x_imag * (ymax - ymin) + ymin;
    x = x_new;
    y = y_new;

    if (x * x + y * y > 4.0) {
      value.x = x;
      value.y = y;
      value.z = float(i);
      value.w = float(i) / float(n_iters);
      break;
    }
  }

  imageStore(imgOutput, texelCoord, value);
}
